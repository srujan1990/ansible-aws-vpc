- hosts: localhost
  connection: local
  gather_facts: False

  tasks:
    - name: Import VPC Variables
      include_vars: vars/vpc_setup

    - name: Create vprofile VPC
      ec2_vpc_net:
        name: "{{ vpc_name }}"
        cidr_block: "{{ vpcCidr }}"
        region: "{{ region }}"
        dns_support: yes
        dns_hostnames: yes
        tenancy: default
        state: "{{ state }}"
      register: vpcout

    #- debug:
    #    var: vpcout

    - name: create public subnet 1 in Zone1
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        az: "{{ zone1 }}"
        region: "{{ region }}"
        state: "{{ state }}"
        cidr: "{{ PubSub1Cidr }}"
        map_public: yes
        resource_tags:
          Name: vprofile-pubsub1
      register: pubsub1_out

    - name: create public subnet 2 in Zone2
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        az: "{{ zone2 }}"
        region: "{{ region }}"
        state: "{{ state }}"
        cidr: "{{ PubSub2Cidr }}"
        map_public: yes
        resource_tags:
          Name: vprofile-pubsub2
      register: pubsub2_out

    - name: create public subnet 3 in Zone3
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        az: "{{ zone3 }}"
        region: "{{ region }}"
        state: "{{ state }}"
        cidr: "{{ PubSub3Cidr }}"
        map_public: yes
        resource_tags:
          Name: vprofile-pubsub3
      register: pubsub3_out

    - name: create private subnet 1 in Zone1
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        az: "{{ zone1 }}"
        region: "{{ region }}"
        state: "{{ state }}"
        cidr: "{{ PrivSub1Cidr }}"
        resource_tags:
          Name: vprofile-privsub1
      register: privsub1_out

    - name: create private subnet 2 in Zone2
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        az: "{{ zone2 }}"
        region: "{{ region }}"
        state: "{{ state }}"
        cidr: "{{ PrivSub2Cidr }}"
        resource_tags:
          Name: vprofile-privsub2
      register: privsub2_out

    - name: create private subnet 3 in Zone3
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        az: "{{ zone3 }}"
        region: "{{ region }}"
        state: "{{ state }}"
        cidr: "{{ PrivSub3Cidr }}"
        resource_tags:
          Name: vprofile-privsub3
      register: privsub3_out

    - name: Internet Gateway Setup
      ec2_vpc_igw:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        state: "{{ state }}"
        resource_tags:
           Name: vprofile-igw
      register: igw_out

    - name: Setup Public subnet route table
      ec2_vpc_route_table:
            vpc_id: "{{ vpcout.vpc.id }}"
            region: "{{ region }}"
            tags:
              Name: vprofile-PubRT
            subnets:
              - "{{ pubsub1_out.subnet.id }}"
              - "{{ pubsub2_out.subnet.id }}"
              - "{{ pubsub3_out.subnet.id }}"
            routes:
              - dest: 0.0.0.0/0
                gateway_id: "{{ igw_out.gateway_id }}"
      register: pubRT_out


    - name: Create new nat gateway and allocate new EIP if a nat gateway does not yet exist in the subnet.
      ec2_vpc_nat_gateway:
        state: "{{ state }}"
        wait: true
        subnet_id: "{{ privsub1_out.subnet.id }}"  # Choose a public subnet for NAT gateway
        region: "{{ region }}"
        if_exist_do_not_create: true
      register: nat_gateway_out

    - name: Update Route Table for Private Subnets
      ec2_vpc_route_table:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: vprofile-PrivRT
        subnets:
          - "{{ privsub1_out.subnet.id }}"
          - "{{ privsub2_out.subnet.id }}"
          - "{{ privsub3_out.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ nat_gateway_out.nat_gateway_id }}"
      register: privRT_out


    - debug:
        var: "{{item}}"

      loop:
        - vpcout.vpc.id
        - pubsub1_out.subnet.id
        - pubsub2_out.subnet.id
        - pubsub3_out.subnet.id
        - privsub1_out.subnet.id
        - privsub2_out.subnet.id
        - privsub3_out.subnet.id
        - igw_out.gateway_id
        - pubRT_out.route_table.id
        - nat_gateway_out.nat_gateway_id
        - privRT_out.route_table.id

    - set_fact:
             vpc_id: "{{ vpcout.vpc.id }}"
             pubsub1id: "{{ pubsub1_out.subnet.id }}"
             pubsub2id: "{{ pubsub2_out.subnet.id }}"
             pubsub3id: "{{ pubsub3_out.subnet.id }}"
             privsub1id: "{{ privsub1_out.subnet.id }}"
             privsub2id: "{{ privsub2_out.subnet.id }}"
             privsub3id: "{{ privsub3_out.subnet.id }}"
             igwid: "{{ igw_out.gateway_id }}"
             pubRTid: "{{ pubRT_out.route_table.id }}"
             NATGWid: "{{ nat_gateway_out.nat_gateway_id }}"
             privRTid: "{{ privRT_out.route_table.id }}"
             cacheable: yes

    - name: Copy set facts to file
      copy:
        content: "vpc_id: '{{ vpc_id }}'\npubsub1_subnet_id: '{{ pubsub1_subnet_id }}'\npubsub2_subnet_id: '{{ pubsub2_subnet_id }}'\npubsub3_subnet_id: '{{ pubsub3_subnet_id }}'\nprivsub1_subnet_id: '{{ privsub1_subnet_id }}'\nprivsub2_subnet_id: '{{ privsub2_subnet_id }}'\nprivsub3_subnet_id: '{{ privsub3_subnet_id }}'\nigw_gateway_id: '{{ igw_gateway_id }}'\npubRT_route_table_id: '{{ pubRT_route_table_id }}'\nnat_gateway_id: '{{ nat_gateway_id }}'\nprivRT_route_table_id: '{{ privRT_route_table_id }}'"
        dest: vars/output_vars
